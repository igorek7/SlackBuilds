#!/bin/sh

# libfpx (library of Kodak FlashPix image file format) Slackware Build script
# SlackBuild Version: 180117

# Copyright 2015-2018 Igor <DIO> ( igor29768 AT gmail.com )
# Based on script written by Andrea Sciucca (gohanz at infinito.it)

# Official Site: ftp://ftp.imagemagick.org/pub/ImageMagick/delegates

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Requirements:

set -e

# Basic information.

PRGNAM=libfpx
VERSION=${VERSION:-1.3.1.10}
BUILD=${BUILD:-1}
TAG=${TAG:-dio}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

NJOBS=${NJOBS:-$(( $(getconf _NPROCESSORS_ONLN) - 1 ))}
NUMJOBS=${NUMJOBS:-" -j$NJOBS$ "}


CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# Automatically determine the architecture we're building on:
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else   
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi     

SRCVER=`echo $VERSION | awk -F"." '{print $1"."$2"."$3"-"$4}'`
SRCDIR=${PRGNAM}-${SRCVER}
SRCARCHIVE=${SRCDIR}.tar.gz

DL_PROG=${DL_PROG:-wget}
DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}
DL_PATH=${DL_PATH:-ftp://ftp.imagemagick.org/pub/ImageMagick/delegates}
DL_URL="${DL_PATH}/${SRCARCHIVE}"

#SOURCE="ftp://ftp.imagemagick.org/pub/ImageMagick/delegates/$PRGNAM-1.3.1-4.tar.xz"

# if source is not present, download in source rootdir if possible
test -r ${CWD}/${SRCARCHIVE} || ${DL_PROG} ${DL_OPTS} ${DL_URL} || exit 1

# Extracting Source Archive
rm -rf $TMP/$PRGNAM-$SRCVER $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
tar xvf $CWD/${SRCARCHIVE}

cd $TMP/$PRGNAM-$SRCVER || exit 1
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
        --prefix=/usr \
        --sysconfdir=/etc \
        --localstatedir=/var \
        --libdir=/usr/lib${LIBDIRSUFFIX} \
        --disable-static \
        --mandir=/usr/man \
        --program-prefix= \
        --program-suffix= \
        --build=$ARCH-slackware-linux
make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG

# Documentation
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION

DOCS="AUTHORS ChangeLog INSTALL NEWS README*"

for DC in $DOCS;do
	[ -e $DC ] && cp -r $DC $PKG/usr/doc/$PRGNAM-$VERSION/ || true
done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION/SlackBuild
	
cd $CWD
for SB in $PRGNAM.SlackBuild slack-desc doinst.sh doinst.sh.gz ;do
 [ -e "$SB" ] && cp -r $SB $PKG/usr/doc/$PRGNAM-$VERSION/SlackBuild/$SB || true
done

for i in man info
do
 if [ -d $PKG/usr/$i ]; then
	cd $PKG/usr/$i
	find . -type f -exec gzip -9 {} \;
	for file in $( find . -type l ) ; do ln -s $( readlink $file ).gz $file.gz ; rm $file ; done
	[ "$i" == "info" ] && rm -f dir
 fi
done

cd $PKG
find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh
[ -e $CWD/doinst.sh.gz ] && zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh
[ -e $CWD/slack-required ] && cat $CWD/slack-required > $PKG/install/slack-required

cd $PKG

/sbin/makepkg -l y -c n $OUTPUT/${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.txz
