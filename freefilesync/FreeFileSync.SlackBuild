#!/bin/sh

# Slackware build script for FreeFileSync

# Originally by titopoquito (titopoquito@gmail.com)
# Revised by igor29768 
# 200112 Updated for Version 11.5
# 190105 Updated for Version 10.7
# 170226 Igor's initial modification

# The .desktop file is taken from fmjrey, and it has been published
# on the AUR (Arch Linux User Repository) before: 
# https://aur.archlinux.org/packages.php?ID=41027&comments=all
# (slightly modified by rworkman - 20110620)

#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.

PRGNAM=FreeFileSync
VERSION=${VERSION:-11.5}
BUILD=${BUILD:-1}
TAG=${TAG:-dio}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
# Download Sources if they are not present
DL_PROG=${DL_PROG:-wget}
DL_TO=${DL_TO:-5}
DL_OPTS=${DL_OPTS:-"--timeout=${DL_TO}"}

SRCARCHIVE="${PRGNAM}_${VERSION}_Source.zip"
test -r ${CWD}/${SRCARCHIVE} || ${DL_PROG} ${DL_OPTS} http://www.freefilesync.org/download/${SRCARCHIVE} || exit 1

cd $TMP
rm -rf $PRGNAM-$VERSION
mkdir -p $PRGNAM-$VERSION
cd $PRGNAM-$VERSION
unzip $CWD/${PRGNAM}_${VERSION}_Source.zip

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Let's use our SLKCFLAGS
#patch -p1 < $CWD/use_our_cflags-5.6.patch
# <DIO> Prepare
# wxgtk < 3.1.0
    # Revert to classic config path
    patch -p1 -i $CWD/revert_xdg_config_path.patch

    # Avoid uses of wxItemContainer::Append(const std::vector<wxString>& items)
    patch -p1 -i $CWD/revert_bulk_append.patch

    # edit lines to remove functions that require wxgtk 3.1.x 
    sed -e 's:m_textCtrlOfflineActivationKey->ForceUpper:// &:g' -i 'FreeFileSync/Source/ui/small_dlgs.cpp'
    sed -e 's:const double scrollSpeed =:& 6; //:g' -i 'wx+/grid.cpp'

    patch -p1 -i $CWD/reversions_11-1.patch
    grep -RiIl 'wxASCII_STR' | xargs sed -e 's/wxASCII_STR/wxString::FromAscii/g' -i
    grep -RiIl 'wxDD_SHOW_HIDDEN' | xargs sed -e 's/, wxDD_DEFAULT_STYLE | wxDD_SHOW_HIDDEN//g' -i

# undo zenju hacks
    sed -e '71,77d' -i 'wx+/dc.h'
    sed -e '73d' -i 'wx+/no_flicker.h'

echo "add LINKFLAGS that were removed but that we still need in our case"
    patch -p1 -i $CWD/revert_linkflags.patch

# inlining of constants not present in libssh2's distributed headers
    sed -i 's/MAX_SFTP_READ_SIZE/30000/g' FreeFileSync/Source/afs/sftp.cpp
    sed -i 's/MAX_SFTP_OUTGOING_SIZE/30000/g' FreeFileSync/Source/afs/sftp.cpp


mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

mkdir -p FreeFileSync/Build/Bin

bindir="${PKG}/usr/bin"
appdir="${PKG}/opt/FreeFileSync"
appdocdir="${PKG}/usr/doc/FreeFileSync"
srcdir="$TMP/$PRGNAM-$VERSION"

# <DIO>
# sed -i 's/gtk+-2.0/gtk+-3.0/' Makefile

cd FreeFileSync/Source

make exeName=FreeFileSync OPTS="$SLKCFLAGS" all
#make install DESTDIR=$PKG
    
cd RealTimeSync
make exeName=RealTimeSync OPTS="$SLKCFLAGS"
#make install DESTDIR=$PKG

cd ../../Build

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

install -t "${appdir}/Bin" -Dm755 Bin/*
mkdir -p "${bindir}"
ln -s /opt/FreeFileSync/Bin/{FreeFileSync,RealTimeSync} "${bindir}"

cp -rT Resources "${appdir}/Resources"
find "${appdir}/Resources" -type f -print0 | xargs -0 chmod 644
install -t "${PKG}/usr/share/pixmaps" -Dm644 Resources/FreeFileSync.png Resources/RealTimeSync.png

cd "${srcdir}"
install -d "${appdocdir}"
# gzip < Changelog.txt > "${appdocdir}/CHANGELOG.gz"
install -t "${PKG}/usr/share/applications" -Dm644 $CWD/FreeFileSync.desktop $CWD/RealTimeSync.desktop

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
